{"version":3,"sources":["Spinner.js","components/ChatRooms/ChatRooms.js","components/Room/Room.js","App.js","reportWebVitals.js","index.js"],"names":["Loader","Spinner","animation","role","className","ChatRooms","props","navigate","useNavigate","joinThenOpen","id","chatroomContract","methods","joinRoom","send","from","walletAddress","console","log","rooms","map","room","src","roomImage","roomName","_address","roomCreator","diameter","seed","jsNumberForAddress","truncateAddress","roomMembers","length","includes","to","roomId","onClick","Room","useParams","useState","loading","setLoading","messages","setMessages","newMessage","setNewMessage","details","setDetails","kit","setKit","setWalletAddress","setChatroomContract","nullState","setNullState","connectWallet","window","celo","enable","web3","Web3","newKitFromWeb3","eth","getAccounts","accounts","defaultAccount","alert","getBalance","getTotalBalance","myContract","Contract","chatroomABI","useEffect","checkMsg","sender","loadRoom","roomMessages","call","rm","Promise","all","m","message","time","rml","_details","resolve","roomDetails","d","roomPhoto","dd","sendMessage","tx","Date","toLocaleString","href","value","onChange","e","target","address","slice","App","accountBalance","setAccountBalance","setRooms","balance","cUsdBalance","cUSD","shiftedBy","toFixed","fetchRooms","chatRooms","r","_room","rs","addNewRoom","name","photo","newRoom","NewRoom","show","setShow","setName","setPhoto","handleClose","Button","variant","style","height","width","margin","Modal","onHide","Header","closeButton","Title","Body","Footer","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"wlFAUeA,MARf,WACE,OACE,cAACC,EAAA,EAAD,CAASC,UAAU,SAASC,KAAK,SAAjC,SACE,sBAAMC,UAAU,kBAAhB,yBAGL,ECsDcC,G,OAxDG,SAACC,GACjB,IAAMC,EAAWC,cAMXC,EAAY,iDAAG,WAAOC,GAAP,oGAGXJ,EAAMK,iBAAiBC,QAAQC,SAASH,GAAII,KAAK,CAAEC,KAAMT,EAAMU,gBAHpD,OAIjBT,EAAS,QAAD,OAASG,IAJA,+CAMjBO,QAAQC,IAAR,MANiB,wDAAH,sDASlB,OACE,mCACGZ,EAAMa,MACL,sBAAKf,UAAU,YAAf,UACE,qBAAKA,UAAU,aAAf,8BACA,qBAAKA,UAAU,QAAf,SACGE,EAAMa,MAAMC,KAAI,SAACC,GAAD,OACf,sBAAKjB,UAAU,YAAf,UACE,qBAAKkB,IAAKD,EAAKE,YACf,qBAAKnB,UAAU,YAAf,SAA4BiB,EAAKG,WACjC,sBAAKpB,UAAU,eAAf,wBAEE,qBAAKA,UAAU,OAAf,UAzBCqB,EAyB8BJ,EAAKK,YAxB3C,cAAC,IAAD,CAAUC,SAAU,GAAIC,KAAMC,6BAAmBJ,QAyB1C,qBAAKrB,UAAU,OAAf,SACGE,EAAMwB,gBAAgBT,EAAKK,kBAGhC,iDAAoBL,EAAKU,YAAYC,UACrC,qBAAK5B,UAAU,iBAAf,SACGiB,EAAKU,YAAYE,SAAS3B,EAAMU,eAC/B,iCACE,cAAC,IAAD,CAAMkB,GAAE,eAAUb,EAAKc,QAAvB,oBAGF,wBAAQC,QAAO,gCAAE,iHAAY3B,EAAaY,EAAKc,SAA9B,2CAAjB,uBArCF,IAACV,CAmBU,SA4BrB,cAAC,EAAD,KAIP,G,SC2HcY,G,OAlKF,SAAC/B,GACZ,IAAQI,EAAO4B,cAAP5B,GACR,EAA8B6B,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAoCJ,mBAAS,MAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KACA,EAA8BN,mBAAS,MAAvC,mBAAOO,EAAP,KAAgBC,EAAhB,KAEA,EAAsBR,qBAAtB,mBAAOS,EAAP,KAAYC,EAAZ,KACA,EAA0CV,qBAA1C,mBAAOvB,EAAP,KAAsBkC,EAAtB,KACA,EAAgDX,qBAAhD,mBAAO5B,EAAP,KAAyBwC,EAAzB,KACA,EAAkCZ,qBAAlC,mBAAOa,EAAP,KAAkBC,EAAlB,KAGMC,EAAa,iDAAG,wGAChBC,OAAOC,KADS,0CAIVD,OAAOC,KAAKC,SAJF,cAKVC,EAAO,IAAIC,IAAKJ,OAAOC,MACzBR,EAAMY,yBAAeF,GANT,SAQOV,EAAIU,KAAKG,IAAIC,cARpB,OAQVC,EARU,OASVC,EAAiBD,EAAS,GAChCf,EAAIgB,eAAiBA,EAErBf,EAAOD,GACPE,EAAiBc,GAbD,kDAehB/C,QAAQC,IAAR,MAfgB,gCAkBlB+C,MACE,0EAnBgB,0DAAH,qDAyBbC,EAAU,iDAAG,uHAEOlB,EAAImB,gBAAgBnD,GAF3B,cAGToD,EAAa,IAAIpB,EAAIU,KAAKG,IAAIQ,SAClCC,EAtDwB,8CA0D1BnB,EAAoBiB,GARL,gDAUfnD,QAAQC,IAAR,MAVe,yDAAH,qDAchBqD,qBAAU,WACRjB,GACD,GAAE,IAEHiB,qBAAU,WACJvB,GAAOhC,GACTkD,GAEH,GAAE,CAAClB,EAAKhC,IAET,IAAMwD,EAAW,SAACC,GAChB,GAAIA,GAAUnE,EAAMU,cAAe,MAAO,QAC3C,EAEK0D,EAAQ,iDAAG,oHAEbjC,GAAW,GAFE,SAGI9B,EAAiBC,QAAQ+D,aAAajE,GAAIkE,OAH9C,cAGPC,EAHO,gBAIKC,QAAQC,IACxBF,EAAGzD,IAAH,iDAAO,WAAO4D,GAAP,oGACE,CACLP,OAAQO,EAAE,GACVC,QAASD,EAAE,GACXE,KAAMF,EAAE,KAJL,2CAAP,wDALW,cAIPG,EAJO,OAabxC,EAAYwC,GAENC,EAAW,IAAIN,QAAJ,iDAAY,WAAOO,GAAP,iGACX1E,EAAiBC,QAAQ0E,YAAY5E,GAAIkE,OAD9B,OACrBW,EADqB,OAE3BF,EAAQ,CACNlD,OAAQoD,EAAE,GACV7D,YAAa6D,EAAE,GACf/D,SAAU+D,EAAE,GACZC,UAAWD,EAAE,GACbxD,YAAawD,EAAE,KAPU,2CAAZ,uDAfJ,UAyBIT,QAAQO,QAAQD,GAzBpB,QAyBPK,EAzBO,OA0Bb1C,EAAW0C,GACXhD,GAAW,GA3BE,kDA6BbxB,QAAQC,IAAR,MA7Ba,yBA+BbuB,GAAW,GA/BE,6EAAH,qDAmCRiD,EAAW,iDAAG,uHAEC/E,EAAiBC,QAC/BgC,WAAWA,EAAYlC,GACvBI,KAAK,CAAEC,KAAMC,IAJA,OAEV2E,EAFU,OAKhBtC,EAAasC,GACb9C,EAAc,MANE,gDAQhB5B,QAAQC,IAAR,MARgB,yDAAH,qDAkBjB,OANAqD,qBAAU,WACJ5D,GACF+D,GAEH,GAAE,CAAC/D,EAAkByC,IAGpB,oCACIZ,GAAWM,EACX,sBAAK1C,UAAU,OAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,qBAAKkB,IAAKwB,EAAQ0C,YAClB,sBAAKpF,UAAU,YAAf,UACE,qBAAKA,UAAU,YAAf,SAA4B0C,EAAQtB,WACpC,sBAAKpB,UAAU,eAAf,UACG0C,EAAQf,YAAYC,OADvB,0BAKJ,qBAAK5B,UAAU,gBAAf,SACGsC,EAAStB,KAAI,SAAC4D,GAAD,OACZ,qBAAK5E,UAAS,sBAAiBoE,EAASQ,EAAEP,SAA1C,SACE,sBAAKrE,UAAU,mBAAf,UACE,gCACE,qBAAKA,UAAU,kBAAf,SAAkC4E,EAAEC,UACpC,qBAAK7E,UAAU,mBAAf,SACG,IAAIwF,KAAc,IAATZ,EAAEE,MAAaW,sBAG5Bb,EAAEP,QAAUzD,IAxJdS,EAwJuCuD,EAAEP,OAtJtD,mBACEqB,KAAI,gEAA2DrE,EAA3D,iBADN,SAGE,cAAC,IAAD,CAAUE,SAAU,GAAIC,KAAMC,6BAAmBJ,aALvC,IAACA,CA+IS,MAchB,sBAAKrB,UAAU,OAAf,UACE,uBACE2F,MAAOnD,EACPoD,SAAU,SAACC,GAAD,OAAOpD,EAAcoD,EAAEC,OAAOH,MAA9B,IAEZ,wBAAQ3D,QAAO,gCAAE,iHAAYsD,KAAZ,2CAAjB,wBAIJ,cAAC,EAAD,KAIP,G,0BCvKK5D,EAAkB,SAACqE,GACvB,GAAKA,EACL,OACEA,EAAQC,MAAM,EAAG,GACjB,MACAD,EAAQC,MAAMD,EAAQnE,OAAS,EAAGmE,EAAQnE,OAE7C,EA8KcqE,MA5Kf,WACE,MAAsB9D,qBAAtB,mBAAOS,EAAP,KAAYC,EAAZ,KACA,EAA4CV,mBAAS,GAArD,mBAAO+D,EAAP,KAAuBC,EAAvB,KACA,EAA0BhE,qBAA1B,mBAAOpB,EAAP,KAAcqF,EAAd,KACA,EAA0CjE,qBAA1C,mBAAOvB,EAAP,KAAsBkC,EAAtB,KACA,EAAgDX,qBAAhD,mBAAO5B,EAAP,KAAyBwC,EAAzB,KACA,EAAkCZ,qBAAlC,mBAAOa,EAAP,KAAkBC,EAAlB,KAGMC,EAAa,iDAAG,wGAChBC,OAAOC,KADS,0CAIVD,OAAOC,KAAKC,SAJF,cAKVC,EAAO,IAAIC,IAAKJ,OAAOC,MACzBR,EAAMY,yBAAeF,GANT,SAQOV,EAAIU,KAAKG,IAAIC,cARpB,OAQVC,EARU,OASVC,EAAiBD,EAAS,GAChCf,EAAIgB,eAAiBA,EAErBf,EAAOD,GACPE,EAAiBc,GAbD,kDAehB/C,QAAQC,IAAR,MAfgB,gCAkBlB+C,MACE,0EAnBgB,0DAAH,qDAyBbC,EAAU,iDAAG,2HAEOlB,EAAImB,gBAAgBnD,GAF3B,OAETyF,EAFS,OAGTC,EAAcD,EAAQE,KAAKC,WAjDhB,IAiD2CC,QAAQ,GAC9DzC,EAAa,IAAIpB,EAAIU,KAAKG,IAAIQ,SAClCC,EAlDwB,8CAsD1BiC,EAAkBG,GAClBvD,EAAoBiB,GAVL,kDAYfnD,QAAQC,IAAR,MAZe,0DAAH,qDAgBV4F,EAAU,iDAAG,yHAECnG,EAAiBC,QAAQmG,YAAYnC,OAFtC,cAEToC,EAFS,gBAGElC,QAAQC,IACvBiC,EAAE5F,IAAF,iDAAM,WAAO6F,GAAP,oGACG,CACL9E,OAAQ8E,EAAM,GACdvF,YAAauF,EAAM,GACnBzF,SAAUyF,EAAM,GAChB1F,UAAW0F,EAAM,GACjBlF,YAAakF,EAAM,KANjB,2CAAN,wDAJa,OAGTC,EAHS,OAcfV,EAASU,GAdM,kDAgBfjG,QAAQC,IAAR,MAhBe,0DAAH,qDAoBViG,EAAU,iDAAG,WAAOC,EAAMC,GAAb,0GAEE1G,EAAiBC,QAC/B0G,QAAQF,EAAMC,GACdvG,KAAK,CAAEC,KAAMC,IAJD,OAET2E,EAFS,OAKftC,EAAasC,GALE,gDAOf1E,QAAQC,IAAR,MAPe,yDAAH,wDAYhBqD,qBAAU,WACRjB,GACD,GAAE,IAEHiB,qBAAU,WACJvB,GAAOhC,GACTkD,GAEH,GAAE,CAAClB,EAAKhC,IAETuD,qBAAU,WACJ5D,GACFmG,GAEH,GAAE,CAACnG,EAAkByC,IAEtB,IAAMmE,EAAU,SAACjH,GACf,MAAwBiC,oBAAS,GAAjC,mBAAOiF,EAAP,KAAaC,EAAb,KACA,EAAwBlF,qBAAxB,mBAAO6E,EAAP,KAAaM,EAAb,KACA,EAA0BnF,qBAA1B,mBAAO8E,EAAP,KAAcM,EAAd,KAEMC,EAAc,kBAAMH,GAAQ,EAAd,EAGpB,OACE,qCACE,cAACI,EAAA,EAAD,CACEC,QAAQ,UACR1F,QANa,kBAAMqF,GAAQ,EAAd,EAObM,MAAO,CAAEC,OAAQ,OAAQC,MAAO,QAASC,OAAQ,QAHnD,sBAQA,eAACC,EAAA,EAAD,CAAOX,KAAMA,EAAMY,OAAQR,EAA3B,UACE,cAACO,EAAA,EAAME,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACH,EAAA,EAAMI,MAAP,kCAEF,eAACJ,EAAA,EAAMK,KAAP,WACE,8CACA,uBAAOzC,MAAOqB,EAAMpB,SAAU,SAACC,GAAD,OAAOyB,EAAQzB,EAAEC,OAAOH,MAAxB,IAC9B,+CACA,uBAAOA,MAAOsB,EAAOrB,SAAU,SAACC,GAAD,OAAO0B,EAAS1B,EAAEC,OAAOH,MAAzB,OAEjC,eAACoC,EAAA,EAAMM,OAAP,WACE,cAACZ,EAAA,EAAD,CAAQC,QAAQ,YAAY1F,QAASwF,EAArC,mBAGA,cAACC,EAAA,EAAD,CACEC,QAAQ,UACR1F,QAAO,gCAAE,iHAAY9B,EAAM6G,WAAWC,EAAMC,IAAnC,2CAFX,yBAUT,EAED,OACE,sBAAKjH,UAAU,MAAf,UACE,sBAAKA,UAAU,UAAf,UACE,qBAAKA,UAAU,YAAf,sBACA,cAACmH,EAAD,CAASJ,WAAYA,IACrB,sBAAK/G,UAAU,MAAf,UAAsBkG,EAAtB,cAEF,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CACEoC,KAAK,IACLC,QACE,cAAC,EAAD,CACE7G,gBAAiBA,EACjBd,cAAeA,EACfG,MAAOA,EACPR,iBAAkBA,MAIxB,cAAC,IAAD,CACE+H,KAAK,YACLC,QAAS,cAAC,EAAD,CAAM3H,cAAeA,aAMzC,ECrLc4H,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,EACT,GAEJ,E,OCFDQ,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SAKjDZ,G","file":"static/js/main.bbf1f6e7.chunk.js","sourcesContent":["import Spinner from 'react-bootstrap/Spinner';\r\n\r\nfunction Loader() {\r\n  return (\r\n    <Spinner animation=\"border\" role=\"status\">\r\n      <span className=\"visually-hidden\">Loading...</span>\r\n    </Spinner>\r\n  );\r\n}\r\n\r\nexport default Loader;","import React from \"react\";\r\nimport Jazzicon, { jsNumberForAddress } from \"react-jazzicon\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport Loader from \"../../Spinner\";\r\nimport \"./ChatRooms.css\";\r\n\r\nconst ChatRooms = (props) => {\r\n  const navigate = useNavigate()\r\n\r\n  const getIcon = (_address) => {\r\n    return <Jazzicon diameter={50} seed={jsNumberForAddress(_address)} />;\r\n  };\r\n\r\n  const joinThenOpen = async (id) => {\r\n    try {\r\n      // first join room\r\n      await props.chatroomContract.methods.joinRoom(id).send({ from: props.walletAddress });\r\n      navigate(`room/${id}`);      \r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      {props.rooms ? (\r\n        <div className=\"chatrooms\">\r\n          <div className=\"rooms-head\">All Public rooms</div>\r\n          <div className=\"rooms\">\r\n            {props.rooms.map((room) => (\r\n              <div className=\"room-prev\">\r\n                <img src={room.roomImage} />\r\n                <div className=\"room-name\">{room.roomName}</div>\r\n                <div className=\"room-creator\">\r\n                  Created By:\r\n                  <div className=\"icon\">{getIcon(room.roomCreator)}</div>\r\n                  <div className=\"addr\">\r\n                    {props.truncateAddress(room.roomCreator)}\r\n                  </div>\r\n                </div>\r\n                <div>Participants: {room.roomMembers.length}</div>\r\n                <div className=\"room-prev-btns\">\r\n                  {room.roomMembers.includes(props.walletAddress) ? (\r\n                    <button>\r\n                      <Link to={`room/${room.roomId}`}>Open</Link>\r\n                    </button>\r\n                  ) : (\r\n                    <button onClick={async () => joinThenOpen(room.roomId)}>\r\n                      Join\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <Loader />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChatRooms;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Web3 from \"web3\";\r\nimport { newKitFromWeb3 } from \"@celo/contractkit\";\r\nimport chatroomABI from \"../..//contracts/chatroom.abi.json\";\r\nimport \"./Room.css\";\r\nimport Loader from \"../../Spinner\";\r\nimport Jazzicon, { jsNumberForAddress } from \"react-jazzicon\";\r\n\r\nconst chatroomContractAddress = \"0xce42dF9622ED105728B977364F61f350d8b186c2\";\r\n\r\nconst getIcon = (_address) => {\r\n  return (\r\n    <a\r\n      href={`https://alfajores-blockscout.celo-testnet.org/address/${_address}/transactions`}\r\n    >\r\n      <Jazzicon diameter={30} seed={jsNumberForAddress(_address)} />\r\n    </a>\r\n  );\r\n};\r\n\r\nconst Room = (props) => {\r\n  const { id } = useParams();\r\n  const [loading, setLoading] = useState(false);\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState(null);\r\n  const [details, setDetails] = useState(null);\r\n\r\n  const [kit, setKit] = useState();\r\n  const [walletAddress, setWalletAddress] = useState();\r\n  const [chatroomContract, setChatroomContract] = useState();\r\n  const [nullState, setNullState] = useState();\r\n\r\n  // function that connect wallet to dapp\r\n  const connectWallet = async () => {\r\n    if (window.celo) {\r\n      // alert(\"⚠️ Please approve this DApp to use it.\");\r\n      try {\r\n        await window.celo.enable();\r\n        const web3 = new Web3(window.celo);\r\n        let kit = newKitFromWeb3(web3);\r\n\r\n        const accounts = await kit.web3.eth.getAccounts();\r\n        const defaultAccount = accounts[0];\r\n        kit.defaultAccount = defaultAccount;\r\n\r\n        setKit(kit);\r\n        setWalletAddress(defaultAccount);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    } else {\r\n      alert(\r\n        \"You need to install the celo wallet extension in order to use this app\"\r\n      );\r\n    }\r\n  };\r\n\r\n  // get balance of connected wallet\r\n  const getBalance = async () => {\r\n    try {\r\n      const balance = await kit.getTotalBalance(walletAddress);\r\n      const myContract = new kit.web3.eth.Contract(\r\n        chatroomABI,\r\n        chatroomContractAddress\r\n      );\r\n\r\n      setChatroomContract(myContract);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    connectWallet();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (kit && walletAddress) {\r\n      getBalance();\r\n    }\r\n  }, [kit, walletAddress]);\r\n\r\n  const checkMsg = (sender) => {\r\n    if (sender == props.walletAddress) return \"my-msg\";\r\n  };\r\n\r\n  const loadRoom = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const rm = await chatroomContract.methods.roomMessages(id).call();\r\n      const rml = await Promise.all(\r\n        rm.map(async (m) => {\r\n          return {\r\n            sender: m[0],\r\n            message: m[1],\r\n            time: m[2],\r\n          };\r\n        })\r\n      );\r\n      setMessages(rml);\r\n\r\n      const _details = new Promise(async (resolve) => {\r\n        const d = await chatroomContract.methods.roomDetails(id).call();\r\n        resolve({\r\n          roomId: d[0],\r\n          roomCreator: d[1],\r\n          roomName: d[2],\r\n          roomPhoto: d[3],\r\n          roomMembers: d[4],\r\n        });\r\n      });\r\n      const dd = await Promise.resolve(_details);\r\n      setDetails(dd);\r\n      setLoading(false);\r\n    } catch (e) {\r\n      console.log(e);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const sendMessage = async () => {\r\n    try {\r\n      const tx = await chatroomContract.methods\r\n        .newMessage(newMessage, id)\r\n        .send({ from: walletAddress });\r\n      setNullState(tx);\r\n      setNewMessage(null);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (chatroomContract) {\r\n      loadRoom();\r\n    }\r\n  }, [chatroomContract, nullState]);\r\n\r\n  return (\r\n    <>\r\n      {!loading && details ? (\r\n        <div className=\"room\">\r\n          <div className=\"chatroom-head\">\r\n            <img src={details.roomPhoto} />\r\n            <div className=\"head-info\">\r\n              <div className=\"head-name\">{details.roomName}</div>\r\n              <div className=\"head-m-count\">\r\n                {details.roomMembers.length} group members\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"chatroom-main\">\r\n            {messages.map((m) => (\r\n              <div className={`chatmessage ${checkMsg(m.sender)}`}>\r\n                <div className=\"chatmessage-body\">\r\n                  <div>\r\n                    <div className=\"chatmessage-msg\">{m.message}</div>\r\n                    <div className=\"chatmessage-time\">\r\n                      {new Date(m.time * 1000).toLocaleString()}\r\n                    </div>\r\n                  </div>\r\n                  {m.sender != walletAddress && getIcon(m.sender)}\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <div className=\"send\">\r\n            <input\r\n              value={newMessage}\r\n              onChange={(e) => setNewMessage(e.target.value)}\r\n            />\r\n            <button onClick={async () => sendMessage()}>Send</button>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <Loader />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Room;\r\n","import { useState, useEffect } from \"react\";\nimport Web3 from \"web3\";\nimport { newKitFromWeb3 } from \"@celo/contractkit\";\nimport { HashRouter as Router, Routes, Route } from \"react-router-dom\";\nimport ChatRooms from \"./components/ChatRooms/ChatRooms\";\nimport Room from \"./components/Room/Room\";\nimport chatroomABI from \"./contracts/chatroom.abi.json\";\nimport \"./App.css\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\n\nconst ERC20_DECIMALS = 18;\nconst chatroomContractAddress = \"0xce42dF9622ED105728B977364F61f350d8b186c2\";\n\nconst truncateAddress = (address) => {\n  if (!address) return;\n  return (\n    address.slice(0, 5) +\n    \"...\" +\n    address.slice(address.length - 4, address.length)\n  );\n};\n\nfunction App() {\n  const [kit, setKit] = useState();\n  const [accountBalance, setAccountBalance] = useState(0);\n  const [rooms, setRooms] = useState();\n  const [walletAddress, setWalletAddress] = useState();\n  const [chatroomContract, setChatroomContract] = useState();\n  const [nullState, setNullState] = useState();  \n\n  // function that connect wallet to dapp\n  const connectWallet = async () => {\n    if (window.celo) {\n      // alert(\"⚠️ Please approve this DApp to use it.\");\n      try {\n        await window.celo.enable();\n        const web3 = new Web3(window.celo);\n        let kit = newKitFromWeb3(web3);\n\n        const accounts = await kit.web3.eth.getAccounts();\n        const defaultAccount = accounts[0];\n        kit.defaultAccount = defaultAccount;\n\n        setKit(kit);\n        setWalletAddress(defaultAccount);\n      } catch (error) {\n        console.log(error);\n      }\n    } else {\n      alert(\n        \"You need to install the celo wallet extension in order to use this app\"\n      );\n    }\n  };\n\n  // get balance of connected wallet\n  const getBalance = async () => {\n    try {\n      const balance = await kit.getTotalBalance(walletAddress);\n      const cUsdBalance = balance.cUSD.shiftedBy(-ERC20_DECIMALS).toFixed(2);\n      const myContract = new kit.web3.eth.Contract(\n        chatroomABI,\n        chatroomContractAddress\n      );\n\n      setAccountBalance(cUsdBalance);\n      setChatroomContract(myContract);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const fetchRooms = async () => {\n    try {\n      const r = await chatroomContract.methods.chatRooms().call();\n      const rs = await Promise.all(\n        r.map(async (_room) => {\n          return {\n            roomId: _room[0],\n            roomCreator: _room[1],\n            roomName: _room[2],\n            roomImage: _room[3],\n            roomMembers: _room[4],\n          };\n        })\n      );\n      setRooms(rs);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const addNewRoom = async (name, photo) => {\n    try {\n      const tx = await chatroomContract.methods\n        .newRoom(name, photo)\n        .send({ from: walletAddress });\n      setNullState(tx);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n\n  useEffect(() => {\n    connectWallet();\n  }, []);\n\n  useEffect(() => {\n    if (kit && walletAddress) {\n      getBalance();\n    }\n  }, [kit, walletAddress]);\n\n  useEffect(() => {\n    if (chatroomContract) {\n      fetchRooms();\n    }\n  }, [chatroomContract, nullState]);\n\n  const NewRoom = (props) => {\n    const [show, setShow] = useState(false);\n    const [name, setName] = useState();\n    const [photo, setPhoto] = useState();\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    return (\n      <>\n        <Button\n          variant=\"primary\"\n          onClick={handleShow}\n          style={{ height: \"60px\", width: \"100px\", margin: \"2rem\" }}\n        >\n          New Room\n        </Button>\n\n        <Modal show={show} onHide={handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Add new chat room</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <label>Room name</label>\n            <input value={name} onChange={(e) => setName(e.target.value)} />\n            <label>Room Photo</label>\n            <input value={photo} onChange={(e) => setPhoto(e.target.value)} />\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={handleClose}>\n              Close\n            </Button>\n            <Button\n              variant=\"primary\"\n              onClick={async () => props.addNewRoom(name, photo)}\n            >\n              Add\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </>\n    );\n  };\n\n  return (\n    <div className=\"app\">\n      <div className=\"heading\">\n        <div className=\"head-text\">Web3Chat</div>\n        <NewRoom addNewRoom={addNewRoom} />\n        <div className=\"bal\">{accountBalance} cUSD</div>\n      </div>\n      <Router>\n        <Routes>\n          <Route\n            path=\"/\"\n            element={\n              <ChatRooms\n                truncateAddress={truncateAddress}\n                walletAddress={walletAddress}\n                rooms={rooms}\n                chatroomContract={chatroomContract}\n              />\n            }\n          />\n          <Route\n            path=\"/room/:id\"\n            element={<Room walletAddress={walletAddress} />}\n          />\n        </Routes>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css'\n\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}